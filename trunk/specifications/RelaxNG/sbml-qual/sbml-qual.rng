<?xml version="1.0" encoding="UTF-8"?>

<grammar xmlns="http://relaxng.org/ns/structure/1.0"
 datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
 xmlns:qual="http://www.sbml.org/sbml/level3/version1/qual/version1">

  <!-- NOTE: I've ordered all the definitions in depth-first-search order. Please keep them ordered :) -->
  
  <define name="sbml.datatype" combine="interleave">
    <attribute name="qual:required" >
      <data type="boolean"/>
    </attribute>
  </define>

  <!-- modelDefinition extends model -->
    
  <define name="model.datatype" combine="interleave">
    <interleave>
      <optional>
        <element name="qual:listOfTransitions">
          <ref name="listOfTransitions.datatype"/>
        </element>
      </optional>
      <optional>
        <element name="qual:listOfQualitativeSpecies">
          <ref name="listOfQualitativeSpecies.datatype"/>
        </element>
      </optional>
    </interleave>
  </define>

  <define name="listOfTransitions.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <oneOrMore>
        <element name="qual:transition">
        <ref name="transition.datatype"/>
        </element>
      </oneOrMore>
    </interleave>
  </define>

  <define name="transition.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <optional>
        <attribute name="id">
          <ref name="SId.simpleType"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="name">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="temporisationType">
          <ref name="temporisationType.simpleType"/>
        </attribute>
      </optional>
      <optional>
        <element name="qual:listOfInputs">
          <ref name="listOfInputs.datatype"/>
        </element>
      </optional>
      <element name="qual:listOfOutputs">
        <ref name="listOfOutputs.datatype"/>
      </element>
      <optional>
        <element name="qual:listOfFunctionTerms">
          <ref name="listOfFunctionTerms.datatype"/>
        </element>
      </optional>
    </interleave>
  </define>

  <define name="temporisationType.simpleType">
    <choice>
      <value type="string">timer</value>
      <value type="string">priority</value>
      <value type="string">sustain</value>
      <value type="string">proportion</value>
      <value type="string">rate</value>
    </choice>
  </define>

  <define name="sign.simpleType">
    <choice>
      <value type="string">positive</value>
      <value type="string">negative</value>
      <value type="string">unknown</value>
      <value type="string">dual</value>
    </choice>
  </define>

  <define name="listOfInputs.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <oneOrMore>
        <element name="qual:input">
        <ref name="input.datatype"/>
        </element>
      </oneOrMore>
    </interleave>
  </define>

  <define name="input.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <optional>
        <attribute name="id">
          <ref name="SId.simpleType"/>
        </attribute>
      </optional>
      <attribute name="qualitativeSpecies">
        <ref name="SIdRef.simpleType"/>
      </attribute>
      <attribute name="transitionEffect">
        <ref name="transitionEffect.simpleType"/>
      </attribute>
      <optional>
        <attribute name="sign">
          <ref name="sign.simpleType"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="name">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <choice>
          <attribute name="tresholdLevel">
            <data type="integer"/>
          </attribute>
          <attribute name="tresholdSymbol">
            <ref name="SIdRef.simpleType"/>
          </attribute>
        </choice>
      </optional>
    </interleave>
  </define>

  <define name="transitionEffect.simpleType">
    <choice>
      <value type="string">none</value>
      <value type="string">consumption</value>      
      <value type="string">production</value>
      <value type="string">assignmentLevel</value>
      <value type="string">assignmentSymbol</value>
    </choice>
  </define>

  <define name="listOfOutputs.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <oneOrMore>
        <element name="qual:output">
          <ref name="output.datatype"/>
        </element>
      </oneOrMore>
    </interleave>
  </define>

  <define name="output.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <optional>
        <attribute name="id">
          <ref name="SId.simpleType"/>
        </attribute>
      </optional>
      <attribute name="qualitativeSpecies">
        <ref name="SIdRef.simpleType"/>
      </attribute>
      <attribute name="transitionEffect">
        <ref name="transitionEffect.simpleType"/>
      </attribute>
      <optional>
        <attribute name="name">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="level">
          <data type="integer"/>
        </attribute>
      </optional>
    </interleave>
  </define>

  <define name="listOfFunctionTerms.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <element name="qual:defaultTerm">
        <ref name="defaultTerm.datatype"/>
      </element>
      <zeroOrMore>
        <element name="qual:functionTerm">
          <ref name="functionTerm.datatype"/>
        </element>
      </zeroOrMore>
    </interleave>
  </define>

  <define name="defaultTerm.datatype" combine="interleave">
    <!--NOTE - This should be the only datatype not deriving from SBase, in accordance with specs -->
    <interleave>
      <choice>
        <attribute name="resultLevel">
          <data type="string"/>
        </attribute>
        <attribute name="resultSymbol">
          <ref name="SIdRef.simpleType"/>
        </attribute>
      </choice>
    </interleave>
  </define>

  <define name="functionTerm.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <ref name="defaultTerm.datatype"/>
      <ref name="math.datatype"/>
      <optional>
        <attribute name="temporisationValue">
          <data type="double"/>
        </attribute>
      </optional>
      <optional>
        <element name="qual:temporisationMath">
          <ref name="math.datatype"/>
        </element>
      </optional>
    </interleave>
  </define>

  <define name="listOfQualitativeSpecies.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <oneOrMore>
        <element name="qual:qualitativeSpecies">
          <ref name="qualitativeSpecies.datatype"/>
        </element>
      </oneOrMore>
    </interleave>
  </define>

  <define name="qualitativeSpecies.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <attribute name="id">
        <ref name="SId.simpleType"/>
      </attribute>
      <attribute name="compartment">
        <ref name="SIdRef.simpleType"/>
      </attribute>
      <attribute name="constant">
        <data type="boolean"/>
      </attribute>
      <attribute name="boundaryCondition">
        <data type="boolean"/>
      </attribute>
      <optional>
        <attribute name="name">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="initialLevel">
          <data type="integer"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="maxLevel">
          <data type="integer"/>
        </attribute>
      </optional>

      <optional>
        <element name="qual:listOfSymbolicValues">
          <ref name="listOfSymbolicValues.datatype"/>
        </element>
      </optional>

    </interleave>
  </define>

  <define name="listOfSymbolicValues.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <zeroOrMore>
        <element name="qual:symbolicValue">
          <ref name="symbolicValue.datatype"/>
        </element>
      </zeroOrMore>
    </interleave>
  </define>

  <define name="symbolicValue.datatype" combine="interleave">
    <interleave>
      <ref name="SBase.datatype"/>
      <attribute name="id">
        <ref name="SId.simpleType"/>
      </attribute>
      <optional>
        <attribute name="rank">
          <data type="integer"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="name">
          <data type="string"/>
        </attribute>
      </optional>
    </interleave>
  </define>

</grammar>
